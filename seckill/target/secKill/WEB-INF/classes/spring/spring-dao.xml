<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 约定大于配置 -->
    <!--配置整合mybatis过程-->
    <!-- 1: 配置数据库相关参数 -->
    <!-- properties的属性: ${url}-->
    <!-- maven项目下的classpath为 src/main/java 和 src/main/resources 这两个目录-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--2: 数据库的连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!-- 当获取连接失败重试的次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--3: 配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--这才是整合mybatis和spring的配置-->
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置mybatis全局配置文件: mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <!-- 扫描entity包 使用别名 org.seckill.entity.Seckill转换为Seckill-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>


    <!-- 4: 配置扫描Dao接口，动态实现Dao接口，注入到Spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/> <!--使用sqlSessionFactoryBeanName后处理的方式，使用的时候才去找sqlSessionFactory，防止dataSource, jdbc 还没有加载上来-->
        <!-- 给出需要扫描Dao接口，并为其生成一个实现类并注入到Spring容器中 -->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>


</beans>